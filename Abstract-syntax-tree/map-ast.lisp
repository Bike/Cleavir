(cl:in-package #:cleavir-ast)

(defun map-ast-depth-first-preorder (function ast)
  (let ((visited-p (make-hash-table :test #'eq))
        (nodes-to-process '()))
    (flet ((register-if-unvisited (node)
             (cond ((gethash node visited-p)
                    (print "visiting ")
                    (princ node)
                    (princ " twice"))
                   (t
                    (setf (gethash node visited-p) t)
                    (push node nodes-to-process)))))
      (register-if-unvisited ast)
      (loop until (null nodes-to-process)
            do (let ((node (pop nodes-to-process)))
                 (funcall function node)
                 (loop for child in (children node)
                       do (register-if-unvisited child)))))))
